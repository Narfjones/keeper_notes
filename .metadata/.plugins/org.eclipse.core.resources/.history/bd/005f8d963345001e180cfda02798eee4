package keeper.notes.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.test.jdbc.JdbcTestUtils;

import keeper.notes.controller.model.KeeperData;
import keeper.notes.entity.Keeper;

public class KeeperNotesTestSupport {
	private static final String KEEPER_TABLE = "keeper";

	@Autowired
	private JdbcTemplate jdbcTemplate;
	
	@Autowired
	private KeeperNotesController keeperNotesController;
	
	protected int rowsInKeeperTable() {
		return JdbcTestUtils.countRowsInTable(jdbcTemplate, KEEPER_TABLE);
	}

	protected KeeperData insertKeeper(KeeperData keeperData) {
		Keeper keeper = keeperData.toKeeper();
		KeeperData clone = new KeeperData(keeper);
		
		clone.setKeeperId(null);
		return keeperNotesController.addKeeper(clone);
	}

	protected KeeperData buildInsertKeeper(int which) {
		return which == 1 ? insertKeeper1 : insertKeeper2;
	}
	
	//@formatter:off
	private KeeperData insertKeeper1 = new KeeperData(
			1L,
			"Rachel",
			"VanHorn",
			922L
			);
	
	private KeeperData insertKeeper2 = new KeeperData(
			2L,
			"Beth",
			"Klochak",
			912L
			);
	//@formatter:on
	
	protected KeeperData getKeeper(Long keeperId) {
		return keeperNotesController.retrieveKeeperById(keeperId);
	}
	
	protected List<KeeperData> getAllKeepers() {
		return keeperNotesController.listAllKeepers();
	}

	protected List<KeeperData> insertTwoKeepers() {
		KeeperData keeper1 = insertKeeper(buildInsertKeeper(1));
		KeeperData keeper2 = insertKeeper(buildInsertKeeper(2));
		
		return List.of(keeper1, keeper2);
	}
}
